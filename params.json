{"name":"Better Delayed job web","tagline":"Beautiful Secure Web Dashboard for delayed_job","body":"better_delayed_job_web\r\n===============\r\n[![Build Status](https://travis-ci.org/skcript/better_delayed_job_web.svg?branch=master)](https://travis-ci.org/skcript/better_delayed_job_web)\r\n\r\nWe wanted this for ourselves, so we forked it and made it better. A neat and tidy dashboard for delayed_job, which gives you a overview about the status of the queues.\r\nTested and works with Rails 3 and above.\r\n\r\nSome features:\r\n\r\n* Easily view jobs enqueued, working, pending, and failed.\r\n* Queue any single job. or all pending jobs, to run immediately.\r\n* Remove a failed job, or easily remove all failed jobs.\r\n* Watch delayed_job operation with live ajax polling.\r\n* Filter delayed_jobs by queue name\r\n\r\nThe interface:\r\n\r\n![Screen shot](http://i.imgur.com/eji1Z8s.png)\r\n\r\nA beautiful Bootstrap based responsive interface.\r\n\r\nQuick Start For Rails 3 and 4 Applications\r\n------------------------------------\r\n\r\nAdd the dependency to your Gemfile\r\n\r\n```ruby\r\ngem \"delayed_job_web\"\r\n```\r\n\r\nInstall it...\r\n\r\n```ruby\r\nbundle\r\n```\r\n\r\nAdd the following route to your application for accessing the interface,\r\nand retrying failed jobs.\r\n\r\n```ruby\r\nmatch \"/delayed_job\" => DelayedJobWeb, :anchor => false, via: [:get, :post]\r\n```\r\n\r\nYou probably want to password protect the interface, an easy way is to add something like this your config.ru file\r\n\r\n```ruby\r\nif Rails.env.production?\r\n  DelayedJobWeb.use Rack::Auth::Basic do |username, password|\r\n    username == 'username' && password == 'password'\r\n  end\r\nend\r\n```\r\n\r\n`delayed_job_web` runs as a Sinatra application within the rails application. Visit it at `/delayed_job`.\r\n\r\n## Serving static assets\r\n\r\nIf you mount the app on another route, you may encounter the CSS not working anymore. To work around this you can leverage a special HTTP header. Install it, activate it and configure it -- see below.\r\n\r\n### Apache\r\n\r\n    XSendFile On\r\n    XSendFilePath /path/to/shared/bundle\r\n\r\n[`XSendFilePath`](https://tn123.org/mod_xsendfile/) white-lists a directory from which static files are allowed to be served. This should be at least the path to where delayed_job_web is installed.\r\n\r\nUsing Rails you'll have to set `config.action_dispatch.x_sendfile_header = \"X-Sendfile\"`.\r\n\r\n### Nginx\r\n\r\nNginx uses an equivalent that's called `X-Accel-Redirect`, further instructions can be found [in their wiki](http://wiki.nginx.org/XSendfile).\r\n\r\nRails' will need to be configured to `config.action_dispatch.x_sendfile_header = \"X-Accel-Redirect\"`.\r\n\r\n### Lighttpd\r\n\r\nLighty is more `X-Sendfile`, like [outlined](http://redmine.lighttpd.net/projects/1/wiki/X-LIGHTTPD-send-file) in their wiki.\r\n\r\n\r\nContributing\r\n------------\r\n\r\n1. Fork\r\n2. Hack\r\n3. `rake test`\r\n4. Send a pull request\r\n\r\n\r\nReleasing a new version\r\n-----------------------\r\n\r\n1. Update the version in `better_delayed_job_web.gemspec`\r\n2. `git commit better_delayed_job_web.gemspec` with the following message format:\r\n\r\n        Version x.x.x\r\n\r\n        Changelog:\r\n        * Some new feature\r\n        * Some new bug fix\r\n3. `rake release`\r\n\r\n\r\nCredits\r\n------\r\nErick Schmitt - [@ejschmitt][1]\r\nKarthik K - [@imkarthikk][2]\r\n\r\n[1]: http://twitter.com/ejschmitt\r\n[2]: http://twitter.com/imkarthikk","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}